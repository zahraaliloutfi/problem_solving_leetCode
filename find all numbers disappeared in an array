#include <iostream>
#include <vector>
#include <set>

std::vector<int> findDisappearedNumbers(std::vector<int>& nums) {
    int n = nums.size();
    std::set<int> numSet;
    std::vector<int> missingNumbers;

    // Create a set of numbers that exist in the array
    for (int num : nums) {
        numSet.insert(num);
    }

    // Iterate through the range [1, n] and find missing numbers
    for (int i = 1; i <= n; ++i) {
        if (numSet.find(i) == numSet.end()) {
            missingNumbers.push_back(i);
        }
    }

    return missingNumbers;
}

int main() {
    std::vector<int> nums1 = {4, 3, 2, 7, 8, 2, 3, 1};
    std::vector<int> result1 = findDisappearedNumbers(nums1);
    for (int num : result1) {
        std::cout << num << " ";
    }
    // Output: 5 6

    std::cout << std::endl;

    std::vector<int> nums2 = {1, 1};
    std::vector<int> result2 = findDisappearedNumbers(nums2);
    for (int num : result2) {
        std::cout << num << " ";
    }
    // Output: 2

    return 0;
}

